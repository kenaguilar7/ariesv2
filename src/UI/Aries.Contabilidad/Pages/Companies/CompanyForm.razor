@using Aries.Contabilidad.Models.DTOs
@using Aries.Contabilidad.Models.Enums

<EditForm Model="@Company" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-body">
            <div class="alert alert-info">
                Los campos marcados con <span class="text-danger">*</span> son obligatorios
            </div>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">
                    @ErrorMessage
                </div>
            }

            <div class="row mb-3">
                <div class="col-md-8">
                    <label>Tipo de Compañía <span class="text-danger">*</span></label>
                    <InputSelect @bind-Value="Company.CompanyType" class="form-select">
                        @foreach (var type in Enum.GetValues(typeof(CompanyType)))
                        {
                            <option value="@type">@type.ToString().Replace("_", " ")</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Company.CompanyType)" />
                </div>
                <div class="col-md-4">
                    <label>Código <span class="text-danger">*</span></label>
                    <InputText @bind-Value="Company.Code" class="form-control" readonly />
                    <small class="text-success">Código Próxima Compañía: @NextCompanyCode</small>
                    <ValidationMessage For="@(() => Company.Code)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label>Tipo de Identificación <span class="text-danger">*</span></label>
                    <InputSelect @bind-Value="Company.IdType" class="form-select">
                        @foreach (var idType in Enum.GetValues(typeof(IdType)))
                        {
                            <option value="@idType">@idType.ToString().Replace("_", " ")</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Company.IdType)" />
                </div>
                <div class="col-md-6">
                    <label>Identificación <span class="text-danger">*</span></label>
                    <InputText @bind-Value="Company.NumberId" class="form-control" placeholder="X-XXX-XXXX" />
                    <ValidationMessage For="@(() => Company.NumberId)" />
                </div>
            </div>

            @if (Company.CompanyType == CompanyType.Persona_Física)
            {
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label>Nombre Completo <span class="text-danger">*</span></label>
                        <InputText @bind-Value="Company.CompanyName" class="form-control" placeholder="Nombre y Apellidos" />
                        <ValidationMessage For="@(() => Company.CompanyName)" />
                    </div>
                </div>
            }
            else
            {
                <div class="row mb-3">
                    <div class="col-md-12">
                        <label>Razón Social <span class="text-danger">*</span></label>
                        <InputText @bind-Value="Company.CompanyName" class="form-control" />
                        <ValidationMessage For="@(() => Company.CompanyName)" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-12">
                        <label>Representante Legal <span class="text-danger">*</span></label>
                        <InputText @bind-Value="Company.Op1" class="form-control" />
                        <ValidationMessage For="@(() => Company.Op1)" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-12">
                        <label>ID Representante Legal <span class="text-danger">*</span></label>
                        <InputText @bind-Value="Company.Op2" class="form-control" placeholder="X-XXX-XXXX" />
                        <ValidationMessage For="@(() => Company.Op2)" />
                    </div>
                </div>
            }

            <div class="row mb-3">
                <div class="col-md-6">
                    <label>Moneda (Registro Mov.) <span class="text-danger">*</span></label>
                    <InputSelect @bind-Value="Company.MoneyType" class="form-select">
                        @foreach (var moneyType in Enum.GetValues(typeof(CurrencyType)))
                        {
                            <option value="@moneyType">@moneyType.ToString().Replace("_", " ")</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Company.MoneyType)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-12">
                    <label>Dirección <span class="text-danger">*</span></label>
                    <InputText @bind-Value="Company.Address" class="form-control" />
                    <ValidationMessage For="@(() => Company.Address)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-12">
                    <label>Correo Electrónico</label>
                    <InputText @bind-Value="Company.Mail" class="form-control" type="email" />
                    <ValidationMessage For="@(() => Company.Mail)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-12">
                    <label>Dirección Web</label>
                    <InputText @bind-Value="Company.WebSite" class="form-control" />
                    <ValidationMessage For="@(() => Company.WebSite)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label>Teléfono Fijo</label>
                    <InputText @bind-Value="Company.PhoneNumber1" class="form-control" placeholder="(XXX) XXXX-XXXX" />
                    <ValidationMessage For="@(() => Company.PhoneNumber1)" />
                </div>
                <div class="col-md-6">
                    <label>Teléfono Celular</label>
                    <InputText @bind-Value="Company.PhoneNumber2" class="form-control" placeholder="(XXX) XXXX-XXXX" />
                    <ValidationMessage For="@(() => Company.PhoneNumber2)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-12">
                    <label>Observaciones</label>
                    <InputTextArea @bind-Value="Company.Notes" class="form-control" rows="3" />
                    <ValidationMessage For="@(() => Company.Notes)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-12">
                    <div class="form-check">
                        <InputCheckbox @bind-Value="Company.IsActive" class="form-check-input" id="isActive" />
                        <label class="form-check-label" for="isActive">Compañía Activa</label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-end">
                    <button type="button" class="btn btn-secondary me-2" @onclick="OnCancel">
                        <i class="fas fa-times"></i> Cerrar
                    </button>
                    <button type="button" class="btn btn-danger me-2" @onclick="OnClear">
                        <i class="fas fa-eraser"></i> Limpiar
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> @ButtonText
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public CompanyDto Company { get; set; } = new();
    [Parameter] public string ButtonText { get; set; } = "Guardar";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnClear { get; set; }
    [Parameter] public string NextCompanyCode { get; set; }
    [Parameter] public string ErrorMessage { get; set; }
} 